
#user www-data;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	include       mime.types;
	default_type  text/plain;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for"';

	access_log  /var/log/access.log  main;
#	error_log /var/log/nginx/error.log warn;

	#load the virtual hosts
#	include /etc/nginx/conf.d/*.conf;

	server {
		listen 80;
		server_name knut.eamonn.cc;
		root /var/www/demo;
		index index.php index.html;

#		location /inspect {
#			return 200 "$host\n$uri\n$nginx_version\n$args";
#			return 200 "Name: $arg_name";
#		}

		location / {
			try_files $uri $uri/ =404;
		}

		location ~\.php$ {
			# Pass php requests to the php-fpm service (fastcgi)
			include fastcgi.conf;
			fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
		}
		



# location matches in order of precedence		
# exact match
#		location = /greet {
#			return 200 "Hello from NGINX /greet EXACT MATCH location";
#		}

# preferential prefix match. This takes precedence over the regex match
#		location ^~ /greet {
#			return 200 "Hello from NGINX /greet location";
#		}

# regex match Note ~ is case sensitive. Add a '*' to make it case insesitive. i.e. '~*'
# both matches have equal precedence. If both matches are used the the first occurring location block is used.
#		location ~ /greet[0-9] {
#			return 200 "Hello from NGINX /greet REGEX MATCH CASE INSENSITIVE location";
#		}

# prefix match		
#		location /greet {
#			return 200 "Hello from NGINX /greet location";
#		}
	}
}
